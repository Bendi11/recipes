name: Release Build
on:
  push:
    tags:
      - 'v[0-9]+.*'


env:
  CARGO_TERM_COLOR: always

jobs: 
  create_release:
    name: Create release
    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
  release_assets:
    name: Release assets
    needs: create_release 
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
        
      - name: Upload Windows release assets
        if: ${{ matrix.config.os == 'windows-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}

          asset_name: recipier-${{ matrix.config.os }}
          
          asset_path: ./target/release/recipier.exe
          
          asset_content_type: application/octet-stream
          
      - name: Upload Linux / MacOS release assets
        if: ${{ matrix.config.os != 'windows-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}

          asset_name: recipier-${{ matrix.config.os }}
          
          asset_path: ./target/release/recipier
           
          asset_content_type: application/octet-stream
  
